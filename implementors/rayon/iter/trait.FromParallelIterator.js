(function() {var implementors = {};
implementors["polars"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/rayon/1.4/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as <a class=\"trait\" href=\"polars/prelude/trait.ArrowPrimitiveType.html\" title=\"trait polars::prelude::ArrowPrimitiveType\">ArrowPrimitiveType</a>&gt;::<a class=\"type\" href=\"polars/prelude/trait.ArrowPrimitiveType.html#associatedtype.Native\" title=\"type polars::prelude::ArrowPrimitiveType::Native\">Native</a>&gt;&gt; for <a class=\"struct\" href=\"polars/chunked_array/struct.ChunkedArray.html\" title=\"struct polars::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"polars/prelude/trait.ArrowPrimitiveType.html\" title=\"trait polars::prelude::ArrowPrimitiveType\">ArrowPrimitiveType</a>,&nbsp;</span>","synthetic":false,"types":["polars::chunked_array::ChunkedArray"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/rayon/1.4/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; for <a class=\"type\" href=\"polars/datatypes/type.BooleanChunked.html\" title=\"type polars::datatypes::BooleanChunked\">BooleanChunked</a>","synthetic":false,"types":["polars::datatypes::BooleanChunked"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/rayon/1.4/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"type\" href=\"polars/datatypes/type.Utf8Chunked.html\" title=\"type polars::datatypes::Utf8Chunked\">Utf8Chunked</a>","synthetic":false,"types":["polars::datatypes::Utf8Chunked"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/rayon/1.4/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt; for <a class=\"type\" href=\"polars/datatypes/type.Utf8Chunked.html\" title=\"type polars::datatypes::Utf8Chunked\">Utf8Chunked</a>","synthetic":false,"types":["polars::datatypes::Utf8Chunked"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/rayon/1.4/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"type\" href=\"polars/datatypes/type.Utf8Chunked.html\" title=\"type polars::datatypes::Utf8Chunked\">Utf8Chunked</a>","synthetic":false,"types":["polars::datatypes::Utf8Chunked"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/rayon/1.4/rayon/iter/trait.FromParallelIterator.html\" title=\"trait rayon::iter::FromParallelIterator\">FromParallelIterator</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"type\" href=\"polars/datatypes/type.Utf8Chunked.html\" title=\"type polars::datatypes::Utf8Chunked\">Utf8Chunked</a>","synthetic":false,"types":["polars::datatypes::Utf8Chunked"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()